{"version":3,"file":"static/js/115.51b476f7.chunk.js","mappings":"kOAmDA,UA9Ca,WACX,OAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BL,EAAAA,EAAAA,UAAS,MAAnC,eAAOO,EAAP,KAAcC,EAAd,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAAL,CAGA,IAAMK,EAAS,mCAAG,oGAEdN,GAAa,GAFC,UAGKO,EAAAA,EAAAA,IAAYN,GAHjB,OAGRO,EAHQ,OAKdV,EAAgBU,EAAKC,MALP,gDAOdL,EAAS,KAAMM,SAPD,yBASdV,GAAa,GATC,4EAAH,qDAYfM,GAbC,CAcF,GAAE,CAACL,EAASE,KAGX,gCACGJ,IAAa,SAAC,IAAD,KACd,+BACGF,QADH,IACGA,OADH,EACGA,EAAcc,KAAI,SAAAC,GACjB,OACE,2BACE,gBACEC,IAAG,yCAAoCD,EAAME,cAC7CC,IAAI,SACJC,MAAM,SAER,uBAAIJ,EAAMK,SANHL,EAAMM,GASlB,QAIR,C,+LC/CKC,EAAY,+BACZC,EAAU,mCAEHC,EAAW,mCAAG,sGACFC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,qCACoBC,IAFlB,uBACjBZ,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,qDAOXe,EAAiB,mCAAG,WAAML,GAAN,yFACRI,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACCD,EADD,oBACeE,IAFP,uBACvBZ,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,sDAOjBgB,EAAc,mCAAG,WAAMC,GAAN,yFACLH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACgBC,EADhB,iCACgDK,IAF3C,uBACpBjB,EADoB,EACpBA,KADoB,kBAIrBA,EAAKkB,SAJgB,2CAAH,sDAOdC,EAAW,mCAAG,WAAMT,GAAN,yFACFI,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACCD,EADD,4BACuBE,IAFrB,uBACjBZ,EADiB,EACjBA,KADiB,kBAIlBA,EAAKkB,SAJa,2CAAH,sDAOXnB,EAAW,mCAAG,WAAMW,GAAN,yFACFI,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACCD,EADD,4BACuBE,IAFrB,uBACjBZ,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,qD","sources":["pages/Cast/Cast.jsx","services/Api.js"],"sourcesContent":["import { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { movieActors } from 'services/Api';\n\nconst Cast = () => {\n  const [moviesActors, setMoviesActors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const getActors = async () => {\n      try {\n        setIsLoading(true);\n        const data = await movieActors(movieId);\n\n        setMoviesActors(data.cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getActors();\n  }, [movieId, error]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <ul>\n        {moviesActors?.map(actor => {\n          return (\n            <li key={actor.id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n                alt=\"Poster\"\n                width=\"200\"\n              />\n              <p>{actor.name}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst CONST_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'bf3651cb61bc1a5b81f0c6f0f7527e55';\n\nexport const fetchMovies = async () => {\n  const { data } = await axios.get(\n    `${CONST_URL}/trending/all/day?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(\n    `${CONST_URL}/movie/${id}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const searchAnyMovie = async query => {\n  const { data } = await axios.get(\n    `${CONST_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n  return data.results;\n};\n\nexport const movieReview = async id => {\n  const { data } = await axios.get(\n    `${CONST_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return data.results;\n};\n\nexport const movieActors = async id => {\n  const { data } = await axios.get(\n    `${CONST_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n"],"names":["useState","moviesActors","setMoviesActors","isLoading","setIsLoading","movieId","useParams","error","setError","useEffect","getActors","movieActors","data","cast","message","map","actor","src","profile_path","alt","width","name","id","CONST_URL","API_KEY","fetchMovies","axios","fetchMovieDetails","searchAnyMovie","query","results","movieReview"],"sourceRoot":""}