{"version":3,"file":"static/js/729.66e185ea.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","services/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"SearchBar_SearchForm__J+i1a\",\"SearchFormButton\":\"SearchBar_SearchFormButton__J-w2N\",\"SearchFormButtonLabel\":\"SearchBar_SearchFormButtonLabel__iHW4N\",\"SearchFormInput\":\"SearchBar_SearchFormInput__4T9IM\"};","import { useState } from 'react';\nimport css from './SearchBar.module.css';\nimport { useSearchParams } from 'react-router-dom';\nimport { Notify } from 'notiflix';\n\nexport const Searchbar = ({ onSubmit }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const data = searchParams.get('query');\n  const [query, setQuery] = useState(data ?? '');\n\n  const handleInputChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setSearchParams({ query });\n\n    if (query === '') {\n      Notify.failure('Write something');\n      return;\n    }\n\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <div className={css.Searchbar}>\n      <form className={css.SearchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={css.SearchFormButton}>\n          <span className={css.SearchFormButtonLabel}>Search</span>\n        </button>\n        <input\n          onInput={handleInputChange}\n          className={css.SearchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          value={query}\n        />\n      </form>\n    </div>\n  );\n};\n","import { Loader } from 'components/Loader/Loader';\nimport {\n  EmptyMessage,\n  MistakeMessage,\n} from 'components/MistakeMessage/MistakeMessage';\nimport { Searchbar } from 'components/SearchBar/SearchBar';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { searchAnyMovie } from 'services/Api';\n\nfunction Movies() {\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchMovie, setSearchMovie] = useState([]);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    const getMovies = async query => {\n      try {\n        setIsLoading(true);\n        const movie = await searchAnyMovie(query);\n        setSearchMovie(movie);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies(query);\n  }, [query]);\n\n  const onSubmit = query => {\n    setQuery(query);\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={onSubmit} />\n      {searchMovie.length === 0 && <EmptyMessage />}\n      {error && <MistakeMessage />}\n      <div>\n        {isLoading && <Loader />}\n        <ul>\n          {searchMovie.map(movie => {\n            return (\n              <li key={movie.id}>\n                <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                  <p>{movie.title}</p>\n                </NavLink>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </>\n  );\n}\n\nexport default Movies;\n","import axios from 'axios';\n\nconst CONST_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'bf3651cb61bc1a5b81f0c6f0f7527e55';\n\nexport const fetchMovies = async () => {\n  const { data } = await axios.get(\n    `${CONST_URL}/trending/all/day?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(\n    `${CONST_URL}/movie/${id}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const searchAnyMovie = async query => {\n  const { data } = await axios.get(\n    `${CONST_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n  return data.results;\n};\n\nexport const movieReview = async id => {\n  const { data } = await axios.get(\n    `${CONST_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return data.results;\n};\n\nexport const movieActors = async id => {\n  const { data } = await axios.get(\n    `${CONST_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n"],"names":["Searchbar","onSubmit","useSearchParams","searchParams","setSearchParams","data","get","useState","query","setQuery","className","css","e","preventDefault","Notify","type","onInput","target","value","autoComplete","autoFocus","placeholder","isLoading","setIsLoading","searchMovie","setSearchMovie","error","setError","location","useLocation","useEffect","getMovies","searchAnyMovie","movie","message","length","MistakeMessage","Loader","map","to","id","state","from","title","CONST_URL","API_KEY","fetchMovies","axios","fetchMovieDetails","results","movieReview","movieActors"],"sourceRoot":""}