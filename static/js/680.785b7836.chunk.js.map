{"version":3,"file":"static/js/680.785b7836.chunk.js","mappings":"mPAkDA,UA1CA,WACE,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdJ,GAAa,GAFC,UAGOK,EAAAA,EAAAA,MAHP,OAGRR,EAHQ,OAIdC,EAAUD,EAAOS,SAJH,gDAMdJ,EAAS,KAAMK,SAND,yBAQdP,GAAa,GARC,4EAAH,qDAWfI,GACD,GAAE,CAACH,KAEJE,EAAAA,EAAAA,YAAU,WACM,OAAVF,GAGJO,IAAAA,OAAAA,QAAA,qBAAsCP,GACvC,GAAE,CAACA,KAGF,iBAAKQ,UAAU,OAAf,WACE,4CACe,IAAdV,IAAsB,SAAC,IAAD,IACtBF,EAAOa,KAAI,SAAAC,GACV,OACE,SAAC,KAAD,CAAqBF,UAAU,YAAYG,GAAE,kBAAaD,EAAME,IAAhE,UACE,wBAAKF,EAAMG,SADFH,EAAME,GAIpB,MAGN,C,+LC9CKE,EAAY,+BAEZC,EAAU,mCAEHX,EAAW,mCAAG,sGACFY,EAAAA,EAAAA,IAAA,UAClBF,EADkB,qCACoBC,IAFlB,uBACjBE,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,qDAOXC,EAAiB,mCAAG,WAAMN,GAAN,yFACRI,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACCF,EADD,oBACeG,IAFP,uBACvBE,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,sDAOjBE,EAAc,mCAAG,WAAMC,GAAN,yFACLJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACgBC,EADhB,iCACgDK,IAF3C,uBACpBH,EADoB,EACpBA,KADoB,kBAIrBA,EAAKZ,SAJgB,2CAAH,sDAOdgB,EAAW,mCAAG,WAAMT,GAAN,yFACFI,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACCF,EADD,4BACuBG,IAFrB,uBACjBE,EADiB,EACjBA,KADiB,kBAIlBA,EAAKZ,SAJa,2CAAH,sDAOXiB,EAAW,mCAAG,WAAMV,GAAN,yFACFI,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACCF,EADD,4BACuBG,IAFrB,uBACjBE,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,qD","sources":["pages/HomePage/HomePage.jsx","services/Api.js"],"sourcesContent":["import React from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchMovies } from 'services/Api';\nimport Notiflix from 'notiflix';\n\nfunction Homepage() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        setIsLoading(true);\n        const movies = await fetchMovies();\n        setMovies(movies.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies();\n  }, [error]);\n\n  useEffect(() => {\n    if (error === null) {\n      return;\n    }\n    Notiflix.Notify.failure(`some error ${error}`);\n  }, [error]);\n\n  return (\n    <div className=\"list\">\n      <h2>Trending today</h2>\n      {isLoading === true && <Loader />}\n      {movies.map(movie => {\n        return (\n          <Link key={movie.id} className=\"movieItem\" to={`/movies/${movie.id}`}>\n            <h3>{movie.title}</h3>\n          </Link>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Homepage;\n","import axios from 'axios';\n\nconst CONST_URL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'bf3651cb61bc1a5b81f0c6f0f7527e55';\n\nexport const fetchMovies = async () => {\n  const { data } = await axios.get(\n    `${CONST_URL}/trending/all/day?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(\n    `${CONST_URL}/movie/${id}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const searchAnyMovie = async query => {\n  const { data } = await axios.get(\n    `${CONST_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n  return data.results;\n};\n\nexport const movieReview = async id => {\n  const { data } = await axios.get(\n    `${CONST_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return data.results;\n};\n\nexport const movieActors = async id => {\n  const { data } = await axios.get(\n    `${CONST_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n"],"names":["useState","movies","setMovies","isLoading","setIsLoading","error","setError","useEffect","getMovies","fetchMovies","results","message","Notiflix","className","map","movie","to","id","title","CONST_URL","API_KEY","axios","data","fetchMovieDetails","searchAnyMovie","query","movieReview","movieActors"],"sourceRoot":""}